name: Build Installer

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полная история для анализа коммитов

      # Шаг 1: Определяем версию из сообщения коммита
      - name: Extract version from commit
        id: get-version
        run: |
          # Получаем последнее сообщение коммита
          COMMIT_MSG=$(git log -1 --pretty=%B)
          # Извлекаем версию (формат "X.X.X")
          VERSION=$(echo "$COMMIT_MSG" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          
          # Если не найдено - используем дату
          if [ -z "$VERSION" ]; then
              VERSION=$(date +'%Y.%m.%d')
              echo "Warning: Using date as version"
          fi
          
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo $VERSION > version.txt

      # Шаг 2: Установка Inno Setup
      - name: Install Inno Setup
        run: choco install innosetup -y --no-progress

      # Шаг 3: Проверка структуры
      - name: Verify project structure
        run: |
          # Обязательные проверки
          if [ ! -f "lab5/bin/Debug/lab5.exe" ]; then
              echo "##[error] lab5.exe not found!"
              echo "Current structure:"
              ls -R
              exit 1
          fi

      # Шаг 4: Сборка установщика
      - name: Build with exact version
        run: |
          ISCC.exe /O"." /F"Installer_${{ steps.get-version.outputs.version }}" ^
                  /DMyAppVersion="${{ steps.get-version.outputs.version }}" ^
                  setup.iss
          
          if [ $? -ne 0 ]; then
              echo "##[error] Build failed"
              cat setup.ilg
              exit 1
          fi

      # Шаг 5: Публикация результата
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: Installer_${{ steps.get-version.outputs.version }}
          path: Installer_${{ steps.get-version.outputs.version }}.exe
          retention-days: 1  # Уменьшено для экономии места

      # Шаг 6: Принудительное обновление версии
      - name: Force version update
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Update version to ${{ steps.get-version.outputs.version }} [CI]" || echo "No changes"
          git push || echo "Nothing to push"
