name: Build Installer

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Шаг 1: Определение версии из коммита (чистый PowerShell)
      - name: Extract version from commit
        id: get-version
        run: |
          # Получаем сообщение последнего коммита
          $commitMsg = git log -1 --pretty=%B
          
          # Извлекаем версию вида X.X.X
          if ($commitMsg -match '\d+\.\d+\.\d+') {
              $version = $matches[0]
          } else {
              # Если нет версии - используем дату
              $version = Get-Date -Format "yyyy.MM.dd"
              Write-Output "Warning: Using date as version"
          }
          
          Write-Output "Version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
          Set-Content -Path version.txt -Value $version

      # Шаг 2: Установка Inno Setup
      - name: Install Inno Setup
        run: choco install innosetup -y --no-progress

      # Шаг 3: Проверка структуры (PowerShell)
      - name: Verify project structure
        run: |
          $exePath = "lab5/bin/Debug/lab5.exe"
          if (-not (Test-Path $exePath)) {
              Write-Error "File $exePath not found!"
              Get-ChildItem -Recurse | Format-Table FullName
              exit 1
          }

      # Шаг 4: Сборка
      - name: Build installer
        run: |
          ISCC.exe /O"." /F"Installer_${{ steps.get-version.outputs.version }}" `
                  /DMyAppVersion="${{ steps.get-version.outputs.version }}" `
                  setup.iss
          
          if ($LASTEXITCODE -ne 0) {
              Get-Content "setup.ilg" | Write-Output
              exit 1
          }

      # Шаг 5: Публикация
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: Installer_${{ steps.get-version.outputs.version }}
          path: Installer_${{ steps.get-version.outputs.version }}.exe
