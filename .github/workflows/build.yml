name: Build and Publish Installer

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true  # Для последующего push

      # Шаг 1: Определяем версию из коммита
      - name: Extract version
        id: get-version
        run: |
          $commitMsg = git log -1 --pretty=%B
          if ($commitMsg -match '\d+\.\d+\.\d+') {
              $version = $matches[0]
          } else {
              $version = "1.0.0"
              Write-Output "Warning: Using default version"
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT
          Set-Content -Path version.txt -Value $version

      # Шаг 2: Установка Inno Setup
      - name: Install Inno Setup
        run: choco install innosetup -y --no-progress

      # Шаг 3: Сборка установщика
      - name: Build installer
        run: |
          $installerName = "MyApp_${{ steps.get-version.outputs.version }}.exe"
          ISCC.exe /O"." /F"$installerName" /DMyAppVersion="${{ steps.get-version.outputs.version }}" setup.iss
          if ($LASTEXITCODE -ne 0) {
              Get-Content "setup.ilg" | Write-Output
              exit 1
          }

      # Шаг 4: Публикация артефакта
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Installer
          path: MyApp_${{ steps.get-version.outputs.version }}.exe

      # Шаг 5: Коммит и пуш установщика
      - name: Commit and push installer
        run: |
          $installerFile = "MyApp_${{ steps.get-version.outputs.version }}.exe"
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add $installerFile
          git commit -m "Add installer ${{ steps.get-version.outputs.version }} [CI]"
          git push origin main
